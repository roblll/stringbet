export const rankings = {
  'AA': [1, 1 / 169],
  'KK': [2, 2 / 169],
  'QQ': [3, 3 / 169],
  'AKs': [4, 4 / 169],
  'JJ': [5, 5 / 169],
  'AQs': [6, 6 / 169],
  'KQs': [7, 7 / 169],
  'AJs': [8, 8 / 169],
  'KJs': [9, 9 / 169],
  'TT': [10, 10 / 169],
  'AKo': [11, 11 / 169],
  'ATs': [12, 12 / 169],
  'QJs': [13, 13 / 169],
  'KTs': [14, 14 / 169],
  'QTs': [15, 15 / 169],
  'JTs': [16, 16 / 169],
  '99': [17, 17 / 169],
  'AQo': [18, 18 / 169],
  'A9s': [19, 19 / 169],
  'KQo': [20, 20 / 169],
  '88': [21, 21 / 169],
  'K9s': [22, 22 / 169],
  'T9s': [23, 23 / 169],
  'A8s': [24, 24 / 169],
  'Q9s': [25, 25 / 169],
  'J9s': [26, 26 / 169],
  'AJo': [27, 27 / 169],
  'A5s': [28, 28 / 169],
  '77': [29, 29 / 169],
  'A7s': [30, 30 / 169],
  'KJo': [31, 31 / 169],
  'A4s': [32, 32 / 169],
  'A3s': [33, 33 / 169],
  'A6s': [34, 34 / 169],
  'QJo': [35, 35 / 169],
  '66': [36, 36 / 169],
  'K8s': [37, 37 / 169],
  'T8s': [38, 38 / 169],
  'A2s': [39, 39 / 169],
  '98s': [40, 40 / 169],
  'J8s': [41, 41 / 169],
  'ATo': [42, 42 / 169],
  'Q8s': [43, 43 / 169],
  'K7s': [44, 44 / 169],
  'KTo': [45, 45 / 169],
  '55': [46, 46 / 169],
  'JTo': [47, 47 / 169],
  '87s': [48, 48 / 169],
  'QTo': [49, 49 / 169],
  '44': [50, 50 / 169],
  '33': [51, 51 / 169],
  '22': [52, 52 / 169],
  'K6s': [53, 53 / 169],
  '97s': [54, 54 / 169],
  'K5s': [55, 55 / 169],
  '76s': [56, 56 / 169],
  'T7s': [57, 57 / 169],
  'K4s': [58, 58 / 169],
  'K3s': [59, 59 / 169],
  'K2s': [60, 60 / 169],
  'Q7s': [61, 61 / 169],
  '86s': [62, 62 / 169],
  '65s': [63, 63 / 169],
  'J7s': [64, 64 / 169],
  '54s': [65, 65 / 169],
  'Q6s': [66, 66 / 169],
  '75s': [67, 67 / 169],
  '96s': [68, 68 / 169],
  'Q5s': [69, 69 / 169],
  '64s': [70, 70 / 169],
  'Q4s': [71, 71 / 169],
  'Q3s': [72, 72 / 169],
  'T9o': [73, 73 / 169],
  'T6s': [74, 74 / 169],
  'Q2s': [75, 75 / 169],
  'A9o': [76, 76 / 169],
  '53s': [77, 77 / 169],
  '85s': [78, 78 / 169],
  'J6s': [79, 79 / 169],
  'J9o': [80, 80 / 169],
  'K9o': [81, 81 / 169],
  'J5s': [82, 82 / 169],
  'Q9o': [83, 83 / 169],
  '43s': [84, 84 / 169],
  '74s': [85, 85 / 169],
  'J4s': [86, 86 / 169],
  'J3s': [87, 87 / 169],
  '95s': [88, 88 / 169],
  'J2s': [89, 89 / 169],
  '63s': [90, 90 / 160],
  'A8o': [91, 91 / 169],
  '52s': [92, 92 / 169],
  'T5s': [93, 93 / 169],
  '84s': [94, 94 / 169],
  'T4s': [95, 95 / 169],
  'T3s': [96, 96 / 169],
  '42s': [97, 97 / 169],
  'T2s': [98, 98 / 169],
  '98o': [99, 99 / 169],
  'T8o': [100, 100 / 169],
  'A5o': [101, 101 / 169],
  'A7o': [102, 102 / 169],
  '73s': [103, 103 / 169],
  'A4o': [104, 104 / 169],
  '32s': [105, 105 / 169],
  '94s': [106, 106 / 169],
  '93s': [107, 107 / 169],
  'J8o': [108, 108 / 169],
  'A3o': [109, 109 / 169],
  '62s': [110, 110 / 169],
  '92s': [111, 111 / 169],
  'K8o': [112, 112 / 169],
  'A6o': [113, 113 / 169],
  '87o': [114, 114 / 169],
  'Q8o': [115, 115 / 169],
  '83s': [116, 116 / 169],
  'A2o': [117, 117 / 169],
  '82s': [118, 118 / 169],
  '97o': [119, 119 / 169],
  '72s': [120, 120 / 169],
  '76o': [121, 121 / 169],
  'K7o': [122, 122 / 169],
  '65o': [123, 123 / 169],
  'T7o': [124, 124 / 169],
  'K6o': [125, 125 / 169],
  '86o': [126, 126 / 169],
  '54o': [127, 127 / 169],
  'K5o': [128, 128 / 169],
  'J7o': [129, 129 / 169],
  '75o': [130, 130 / 169],
  'Q7o': [131, 131 / 169],
  'K4o': [132, 132 / 169],
  'K3o': [133, 133 / 169],
  '96o': [134, 134 / 169],
  'K2o': [135, 135 / 169],
  '64o': [136, 136 / 169],
  'Q6o': [137, 137 / 169],
  '53o': [138, 138 / 169],
  '85o': [139, 139 / 169],
  'T6o': [140, 140 / 169],
  'Q5o': [141, 141 / 169],
  '43o': [142, 142 / 169],
  'Q4o': [143, 143 / 169],
  'Q3o': [144, 144 / 169],
  '74o': [145, 145 / 169],
  'Q2o': [146, 146 / 169],
  'J6o': [147, 147 / 169],
  '63o': [148, 148 / 169],
  'J5o': [149, 149 / 169],
  '95o': [150, 150 / 169],
  '52o': [151, 151 / 169],
  'J4o': [152, 152 / 169],
  'J3o': [153, 153 / 169],
  '42o': [154, 154 / 169],
  'J2o': [155, 155 / 169],
  '84o': [156, 156 / 169],
  'T5o': [157, 157 / 169],
  'T4o': [158, 158 / 169],
  '32o': [159, 159 / 169],
  'T3o': [160, 160 / 169],
  '73o': [161, 161 / 169],
  'T2o': [162, 162 / 169],
  '62o': [163, 163 / 169],
  '94o': [164, 164 / 169],
  '93o': [165, 165 / 169],
  '92o': [166, 166 / 169],
  '83o': [167, 167 / 169],
  '82o': [168, 168 / 169],
  '72o': [169, 169 / 169],
}

export type RankType = '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'T' | 'J' | 'Q' | 'K' | 'A';
export type SuitType = 'C' | 'D' | 'H' | 'S';
export type CardType = {rank: RankType, suit: SuitType}

export const deck: CardType[] = [
  {rank: '2', suit: 'C'},
  {rank: '2', suit: 'D'},
  {rank: '2', suit: 'H'},
  {rank: '2', suit: 'S'},
  {rank: '3', suit: 'C'},
  {rank: '3', suit: 'D'},
  {rank: '3', suit: 'H'},
  {rank: '3', suit: 'S'},
  {rank: '4', suit: 'C'},
  {rank: '4', suit: 'D'},
  {rank: '4', suit: 'H'},
  {rank: '4', suit: 'S'},
  {rank: '5', suit: 'C'},
  {rank: '5', suit: 'D'},
  {rank: '5', suit: 'H'},
  {rank: '5', suit: 'S'},
  {rank: '6', suit: 'C'},
  {rank: '6', suit: 'D'},
  {rank: '6', suit: 'H'},
  {rank: '6', suit: 'S'},
  {rank: '7', suit: 'C'},
  {rank: '7', suit: 'D'},
  {rank: '7', suit: 'H'},
  {rank: '7', suit: 'S'},
  {rank: '8', suit: 'C'},
  {rank: '8', suit: 'D'},
  {rank: '8', suit: 'H'},
  {rank: '8', suit: 'S'},
  {rank: '9', suit: 'C'},
  {rank: '9', suit: 'D'},
  {rank: '9', suit: 'H'},
  {rank: '9', suit: 'S'},
  {rank: 'T', suit: 'C'},
  {rank: 'T', suit: 'D'},
  {rank: 'T', suit: 'H'},
  {rank: 'T', suit: 'S'},
  {rank: 'J', suit: 'C'},
  {rank: 'J', suit: 'D'},
  {rank: 'J', suit: 'H'},
  {rank: 'J', suit: 'S'},
  {rank: 'Q', suit: 'C'},
  {rank: 'Q', suit: 'D'},
  {rank: 'Q', suit: 'H'},
  {rank: 'Q', suit: 'S'},
  {rank: 'K', suit: 'C'},
  {rank: 'K', suit: 'D'},
  {rank: 'K', suit: 'H'},
  {rank: 'K', suit: 'S'},
  {rank: 'A', suit: 'C'},
  {rank: 'A', suit: 'D'},
  {rank: 'A', suit: 'H'},
  {rank: 'A', suit: 'S'},
]

export const getRandomInt = (min: number, max: number) => {
  min = Math.ceil(min);
  max = Math.floor(max) + 1;
  return Math.floor(Math.random() * (max - min) + min);
}

export const getRandomHand = () => {
  let card1 = deck[getRandomInt(0, 51)];
  let card2 = deck[getRandomInt(0, 51)];
  while (card1 === card2) {
    card1 = deck[getRandomInt(0, 51)];
    card2 = deck[getRandomInt(0, 51)];
  }
  return { card1, card2 };
}